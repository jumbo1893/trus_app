workflows:
  ios-production:
    name: iOS Production Build
    environment:
      flutter: stable
      xcode: latest
      vars:
        BUNDLE_ID: "com.jumbo.trus"
        TEAM_ID: "W2Y3H5JG6C"
        PROFILE_NAME: "trusi appka ios_app_store 1757109737"

    scripts:
      - name: Get Flutter deps
        script: |
          flutter pub get

      - name: Ensure Podfile uses iOS 12+ and post_install
        script: |
          if ! grep -q "post_install do |installer|" ios/Podfile; then
            cat >> ios/Podfile <<'RUBY'
          
          post_install do |installer|
          installer.pods_project.targets.each do |target|
          target.build_configurations.each do |config|
          if config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] && config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'].to_f < 12.0
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
          end
          end
          end
          end
  
          RUBY
          echo "Appended post_install block to ios/Podfile"
          else
          echo "Podfile already has post_install block - skipping append"
          fi
      - name: CocoaPods install (repo update)
        script: |
          cd ios
          pod install --repo-update || pod install
          cd ..

      - name: Build iOS (no codesign)
        script: |
         flutter build ios --release --no-codesign

      - name: Diagnostic list schemes & show build settings
        script: |
          echo "=== Xcode schemes (workspace) ==="
          xcodebuild -workspace ios/Runner.xcworkspace -list || true
          echo "=== showBuildSettings for Runner ==="
          xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -showBuildSettings || true

      - name: Archive with xcodebuild (captures verbose log)
        script: |
          set -o pipefail
          echo "Archiving workspace..."
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -sdk iphoneos \
            -archivePath $CM_BUILD_DIR/Runner.xcarchive \
            clean archive \
            DEVELOPMENT_TEAM=$TEAM_ID \
            PROVISIONING_PROFILE_SPECIFIER="$PROFILE_NAME" \
            PRODUCT_BUNDLE_IDENTIFIER=$BUNDLE_ID \
            CODE_SIGN_STYLE=Manual 2>&1 | tee $CM_BUILD_DIR/xcodebuild.log
          echo "=== Last 200 lines of xcodebuild.log ==="
          tail -n 200 $CM_BUILD_DIR/xcodebuild.log || true

      - name: Export IPA
        script: |
          cat > $CM_BUILD_DIR/export_options.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>$TEAM_ID</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>$BUNDLE_ID</key>
              <string>$PROFILE_NAME</string>
            </dict>
            <key>compileBitcode</key>
            <false/>
            <key>signingStyle</key>
            <string>manual</string>
          </dict>
          </plist>
          EOF
          
          echo "Exporting IPA..."
          xcodebuild -exportArchive \
            -archivePath $CM_BUILD_DIR/Runner.xcarchive \
            -exportPath $CM_BUILD_DIR/export \
            -exportOptionsPlist $CM_BUILD_DIR/export_options.plist 2>&1 | tee $CM_BUILD_DIR/export.log
          echo "=== export.log tail ==="
          tail -n 200 $CM_BUILD_DIR/export.log || true
          ls -la $CM_BUILD_DIR/export || true

artifacts:
  - $CM_BUILD_DIR/export/*.ipa

publishing:
  app_store_connect:
    auth: api_key
    api_key:
      key_id: $APP_STORE_KEY_ID
      issuer_id: $APP_STORE_ISSUER_ID
      private_key: $APP_STORE_PRIVATE_KEY
    submit_to_testflight: true
